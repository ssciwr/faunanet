# This is a basic workflow to help you get started with Actions

name: CI
  
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test_and_doc:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest,windows-latest] #  macos-latest, windows-latest]
        python-version: ["3.9", "3.12"]
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install macos dependencies 
      if: matrix.os == 'macos-latest'
      run: brew install ffmpeg

    - name: Install windows dependencies 
      if: matrix.os == 'windows-latest'
      run: choco install ffmpeg

    - name: Install linux dependencies 
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install ffmpeg libavcodec-extra

    - name: Getting repository
      uses: actions/checkout@v3

    - name: make venv 
      run: python3 -m venv .venv 
    - name: activate venv on unix 
      if: matrix.os != 'windows-latest'
      run: source ./.venv/bin/activate

    - name: activate venv on windows 
      if: matrix.os == 'windows-latest'
      run: .\.venv\Scripts\activate

    - name: Install dependencies
      run: | 
        python3 -m pip install --upgrade pip
        python3 -m pip install .
        python3 -m pip install -r requirements-dev.txt

    - name: Run pytest unittests
      run: |
        pytest --cov=./src/iSparrow --cov-report=xml -vsx
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        name: ${{ matrix.os }}-${{ matrix.python-version }}
        fail_ci_if_error: true
        verbose: true

